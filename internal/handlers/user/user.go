package user

import (
	"context"
	"github.com/mr-linch/go-tg"
	"github.com/mr-linch/go-tg/tgb"
	"github.com/mr-linch/go-tg/tgb/session"
	"github.com/rs/zerolog"
	"tacy/internal/models"
	"tacy/internal/services/userService"
	"tacy/pkg/botlogger"
)

type UserHandler struct {
	sessionManager *session.Manager[models.Session]
	UserService    userService.Service
	Logger         zerolog.Logger
}

func NewUserHandler(
	sm *session.Manager[models.Session],
	UserService userService.Service,
) *UserHandler {
	return &UserHandler{
		sessionManager: sm,
		UserService:    UserService,
		Logger:         botlogger.GetLogger(),
	}
}

func (h *UserHandler) UserStartMenuSelectionHandler(ctx context.Context, msg *tgb.MessageUpdate) error {
	switch msg.Text {
	case models.UserStartMenu.GetComplimentNow:
		h.sessionManager.Get(ctx).Step = models.SessionStepGetCompliment
		return h.UserGetComplimentByRandomHandler(ctx, msg)
	case models.UserStartMenu.InsertSomeThoughts:
		h.sessionManager.Get(ctx).Step = models.SessionStepInsertSomeThoughts
		msg.Answer("–û—Å—Ç–∞–≤—å —Ç—É—Ç –≤—Å–µ, —á—Ç–æ —Ö–æ—á–µ—à—å, —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ç—Ç–æ –ø—Ä–æ—á—Ç—É \U0001F979üíõ").ReplyMarkup(
			tg.NewReplyKeyboardMarkup(
				tg.NewButtonColumn(
					tg.NewKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚ù§Ô∏è‚Äçü©π"),
				)...,
			).WithResizeKeyboardMarkup())
		return h.UserInputSomeThoughts(ctx, msg)
	default:
		h.sessionManager.Get(ctx).Step = models.SessionStepInit
		return msg.Answer("–ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å üò¢\n–ù–∞–ø–∏—à–∏ /start").ReplyMarkup(tg.NewReplyKeyboardRemove()).DoVoid(ctx)
	}
}

func (h *UserHandler) UserGetComplimentByRandomHandler(ctx context.Context, msg *tgb.MessageUpdate) error {
	photo, compliment, err := h.UserService.OutputComplimentAndPhotoByRandom(ctx)
	if err != nil {
		h.Logger.Warn().Err(err)
		return msg.Answer("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò° –ù–∞–ø–∏—à–∏ –º–Ω–µ –∏ —è –≤—Å–µ –ø–æ–¥–ø—Ä–∞–≤–ª—é üëåüèª").DoVoid(ctx)
	}
	err = msg.AnswerPhoto(tg.NewFileArgUpload(tg.NewInputFileBytes("photo", photo))).DoVoid(ctx)
	if err != nil {
		h.Logger.Warn().Err(err)
		return msg.Answer("–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ üò¢").DoVoid(ctx)
	}
	err = msg.Answer(compliment).DoVoid(ctx)
	if err != nil {
		h.Logger.Warn().Err(err)
		return msg.Answer("–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç üò¢ –ù–æ –º—ã –≤—Å–µ –∑–Ω–∞–µ–º, —á—Ç–æ –¥–∞–∂–µ —Ç–∞–∫ —Ç—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ " +
			"\U0001F979").DoVoid(ctx)
	}
	return msg.Answer("–Ø –Ω–∞–¥–µ—é—Å—å —Ç—ã —Ä–∞–¥–∞!!)").DoVoid(ctx)
}

func (h *UserHandler) UserInputSomeThoughts(ctx context.Context, msg *tgb.MessageUpdate) error {

	return msg.Answer("–°–ø–∞—Å–∏–±–æ, —Å–æ–ª–Ω—ã—à–∫–æ, —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –º–µ–Ω—è üíõ").DoVoid(ctx)
}
